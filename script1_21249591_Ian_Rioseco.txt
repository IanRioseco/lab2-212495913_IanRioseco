player(1, "Juan", "red", 0, 0, 0, 21, P1),
player(2, "Mauricio", "yellow", 0, 0, 0, 21, P2),
piece(red, RedPiece),
piece(yellow, YellowPiece),
board(EmptyBoard),
game(P1, P2, EmptyBoard, 1, G0),
player_play(G0, P1, 1, G1),
player_play(G1, P2, 6, G2),
player_play(G2, P1, 2, G3),
player_play(G3, P2, 6, G4),
player_play(G4, P1, 3, G5),
player_play(G5, P2, 6, G6),
player_play(G6, P1, 4, G7),  
player_play(G7, P2, 5, G8),
write('¿Se puede jugar en el tablero vacío? '),
can_play(EmptyBoard),
nl,
game_get_board(G8, CurrentBoard),
write('¿Se puede jugar después de 8 movimientos? '),
can_play(CurrentBoard),
nl,
write('Jugador actual después de 8 movimientos: '),
get_current_player(G8, CurrentPlayer),
nl,
write('Verificación de victoria horizontal: '),
check_horizontal_win(CurrentBoard, HorizontalWinner),
write(HorizontalWinner),
nl,
write('Verificación de ganador general: '),
who_is_winner(CurrentBoard, Winner),
write(Winner),
nl,
write('¿Es empate?'),
(is_draw(G8) -> true ; write(' no es empate')),
nl,
write('Estado final del juego: '),
write(G8),
nl,
end_game(G8, EndedGame),
write('Historial de movimientos: '),
game_history(EndedGame, History),
write(History),
nl,
write('Estado final del tablero: '),
game_get_board(EndedGame, FinalBoard),
write(FinalBoard).
